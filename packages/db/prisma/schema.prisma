generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @default(autoincrement()) @id
  username String @unique
  password String
  email String @unique
  photo String? @default("")
  name String
  createdAt DateTime @default(now())
  verified Boolean @default(false)
  room Room[] @relation("UserRooms")
  Shapes Shape[] @relation("UserShapes")
  userToken String @default("")
  verificationToken String @default("")
  forgotPasswordToken String? @default("")
  forgotPasswordTokenExpiry  DateTime? 
  @@index([email,username])
}

model Room{
  id Int @default(autoincrement()) @id
  slug String
  createdAt DateTime @default(now())
  adminid Int
  admin User @relation("UserRooms",fields: [adminid], references: [id],onDelete: Cascade)
  Shapes Shape[] @relation("RoomShapes")
  collaboration Boolean @default(false)
  collaborationToken String @default("")
  @@index([collaborationToken])
}

model Shape{
  id String @id
  isDeleted Boolean @default(false)
  type String
  x Float?
  y Float?
  width Int?
  height Int?
  strokeStyle String?
  fillStyle String?
  roomId Int
  radius Float?
  points Json?
  userId Int
  text String?
  endY Float?
  endX Float?
  room Room @relation("RoomShapes",fields: [roomId], references: [id],onDelete: Cascade)
  user User @relation("UserShapes",fields: [userId], references: [id],onDelete: Cascade)
}